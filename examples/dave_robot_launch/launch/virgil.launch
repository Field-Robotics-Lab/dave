<?xml version="1.0"?>
<launch>
	<arg name="gui" default="true"/>
	<arg name="paused" default="false"/>
	<arg name="world_name" default="$(find dave_worlds)/worlds/dave_ocean_waves.world"/>
	<arg name="namespace" default="virgil"/>
	<arg name="velocity_control" default="false"/>
	<arg name="joy_id" default="0"/>
	<arg name="debug" default="false"/>
	<arg name="verbose" default="false"/>
	<arg name="x" default="6"/>
	<arg name="y" default="4"/>
	<arg name="z" default="-93"/>
	<arg name="roll" default="0"/>
	<arg name="pitch" default="0"/>
	<arg name="yaw" default="0"/>

	<!-- Use Gazebo's empty_world.launch with dave_ocean_waves.world -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_name)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="true"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="headless" value="false"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="verbose" value="$(arg verbose)"/>
	</include>

	<!-- Use NED frame north east down -->
	<include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

	<!-- World models -->
	<!-- <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
	    <rosparam subst_value="true">
            meshes:
                heightmap:
                    mesh: package://uuv_gazebo_worlds/models/sand_heightmap/meshes/heightmap.dae
                    model: sand_heightmap
                seafloor:
                    plane: [2000, 2000, 0.1]
                    pose:
                        position: [0, 0, -100]
                north:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [1000, 0, -50]
                south:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [-1000, 0, -50]
                west:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, -1000, -50]
                east:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, 1000, -50]
	    </rosparam>
  	</node> -->

  	<include file="$(find virgil_description)/launch/upload_virgil.launch"/>

  	<include file="$(find dave_nodes)/launch/joy_thrusterop.launch">
    	<arg name="joy_id" value="$(arg joy_id)"/>
    	<arg name="namespace" value="$(arg namespace)"/>
  	</include>

    <!-- Acceleration control -->
<!--     <include file="$(find uuv_control_cascaded_pid)/launch/joy_velocity.launch">
        <arg name="uuv_name" value="virgil" />
        <arg name="model_name" value="virgil" />
        <arg name="joy_id" value="$(arg joy_id)"/>
    </include> -->

  	<node name="spawn_virgil" pkg="gazebo_ros" type="spawn_model"
  		respawn="false" output="screen"
  		args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/virgil"/>

  	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
  		<remap from="robot_description" to="/$(arg namespace)/virgil"/>
  	</node>
</launch>
